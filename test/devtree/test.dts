/**
 * Copyright (C) 2024 Jan Nowotsch
 * Author Jan Nowotsch	<jan.nowotsch@gmail.com>
 *
 * Released under the terms of the GNU GPL v2.0
 */



arch = {
	addr-width = 32;
	reg-width = 32;
	ncores = 2;
	num-ints = 0;
	timer-int = 15;
	syscall-int = 11;
	ipi-int = 31;
	timer-cycle-time-us = 125000;
};

memory = {
	flash = {
		addr = 0x10000000;
		size = 2097152;
	};

	ram = {
		addr = 0x20000000;
		size = 270336;

		// test arch updates in memory nodes
		arch.num-ints += 1;
	};

	// test arch update in the memory section
	arch.num-ints += 1;
};

devices = {
	base-dev = {
		compatible = "comp,base";

		int<8> = [
			1,
			2,
			3,
		];

		addr = 0x10;
		string = "first";
		string = "second";
		addr = 0x20;

		// test arch updates in device nodes
		arch.num-ints = arch.num-ints + 1;
	};

	// test arch update in the memory section
	arch.num-ints += 1;

	// test device updates
	base-dev.int[1] += 10;
	base-dev.string[1] = "no longer second";
	base-dev.addr[0] = 0x11;

	dev1 = {
		// test device references
		compatible = base-dev.compatible;

		string = base-dev.string[1];

		dev2 = {
			compatible = "comp,dev2";

			// test intermediate updates
			int<8> = [ arch.num-ints ];
			arch.num-ints += 1;
			int<8> = [ arch.num-ints ];
			arch.num-ints += 1;
		};

		// test reference to child node
		string = dev2.compatible;
		int<32> = [
			dev2.int[0],
			dev2.int[1],
			ram.size,
		];

		// test reference arithmetic
		addr = base-dev.addr[1] + 0xa;
		int<8> = [
			1 + 2 +3,
			base-dev.int[1] + 10,
			20 + base-dev.int[1],
			1 + base-dev.int[1] + 1,
			(arch.num-ints++),
			(++arch.num-ints),
		];

		arch.num-ints++;
		++arch.num-ints;
	};
};
