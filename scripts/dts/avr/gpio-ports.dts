/**
 * Copyright (C) 2022 Jan Nowotsch
 * Author Jan Nowotsch	<jan.nowotsch@gmail.com>
 *
 * Released under the terms of the GNU GPL v2.0
 */



#include <config/config.h>


porta = {
	compatible = "avr,gpio";

	/**
	 * gpio hardware description
	 * 	has to match dt_data_t of the avr gpio driver
	 */
	baseaddr = 0x20;			// porta

	reg = [
		0x68,					// PCICR
		0x6b					// PCMSK0
	];

	/**
	 * gpio hardware description
	 * 	has to match gpio_cfg_t
	 */
	int<CONFIG_GPIO_INT_WIDTH> = [
		1,		// mode (normal)
		0x0f,	// pin mask
		0x0f,	// in mask
		0x0f,	// out mask
		0x00,	// int mask
		0x0f,	// invert mask (inverted)
		0		// interrupt number
	];
};

led = {
	compatible = "avr,gpio";

	/**
	 * gpio hardware description
	 * 	has to match dt_data_t of the avr gpio driver
	 */
	baseaddr = 0x23;			// portb

	reg = [
		0x68,					// PCICR
		0x6c					// PCMSK1
	];

	/**
	 * gpio hardware description
	 * 	has to match gpio_cfg_t
	 */
	int<CONFIG_GPIO_INT_WIDTH> = [
		1,		// mode (normal)
		0x03,	// pin mask
		0x00,	// in mask
		0x03,	// out mask
		0x00,	// int mask
		0x03,	// invert mask (inverted)
		0		// interrupt number
	];
};

int0 = {
	compatible = "avr,gpio";

	/**
	 * gpio hardware description
	 * 	has to match dt_data_t of the avr gpio driver
	 */
	baseaddr = 0x26;			// portc

	reg = [
		0x68,					// PCICR
		0x6d					// PCMSK2
	];

	/**
	 * gpio hardware description
	 * 	has to match gpio_cfg_t
	 */
	int<CONFIG_GPIO_INT_WIDTH> = [
		1,		// mode (normal)
		0xc0,	// pin mask
		0xc0,	// in mask
		0xc0,	// out mask
		0xc0,	// int mask
		0xc0,	// invert mask (inverted)
		6		// interrupt number
	];
};
