/**
 * Copyright (C) 2019 Jan Nowotsch
 * Author Jan Nowotsch	<jan.nowotsch@gmail.com>
 *
 * Released under the terms of the GNU GPL v2.0
 */



memory = {
	flash = {
		baseaddr = 0x0;
		size = 131072;

		kernel_flash = {
			baseaddr = 0x0;
			size = 46080;
		};

		app_flash = {
			baseaddr = 0x0000b400;
			size = 84992;
		};
	};

	ram = {
		baseaddr = 0x00800000;
		size = 16384;

		registers = {
			baseaddr = 0x00800000;
			size = 256;
		};

		kernel_data = {
			baseaddr = 0x00800100;
			size = 4096;
		};

		kernel_heap = {
			baseaddr = 0x00801100;
			size = 3072;
		};

		kernel_stack = {
			baseaddr = 0x00801d00;
			size = 768;
		};

		app_heap = {
			baseaddr = 0x00802000;
			size = 3072;
		};

		app_data = {
			baseaddr = 0x00802c00;
			size = 5120;
		};
	};
};

driver = {
	uart0 = {
		compatible = "avr,uart";

		/**
		 * uart hardware description
		 * 	has to match the device tree data type
		 *	of the avr uart driver
		 */
		baseaddr = 0xc0;			// uart0 config register base

		reg = [ 0x64 ];				// PRR0
		int<8> = [ 0x2 ];			// PRR0_PRUSART0

		int<8> = [
			20,						// uart0 rx interrupt
			0						// uart0 tx interrupt
		];

		tty0 = {
			compatible = "terminal";

			/**
			 * terminal configuration
			 * 	has to match the configuration data type of
			 * 	the underlying device driver
			 */
			int<32> = [ 115200 ];	// baudrate
			int<8> = [
				1,					// stop bits (1)
				0,					// parity (TPARITY_NONE)
				3,					// csize (TCS_8)
				0					// flags (none)
			];

			klog = {
				compatible = "kernel,log";
			};
		};
	};

	uart1 = {
		compatible = "avr,uart";

		/**
		 * uart hardware description
		 * 	has to match the device tree data type
		 *	of the avr uart driver
		 */
		baseaddr = 0xc8;			// uart1 config register base

		reg = [ 0x64 ];				// PRR0
		int<8> = [ 0x10 ];			// PRR0_PRUSART1

		int<8> = [
			28,						// uart1 rx interrupt
			0						// uart1 tx interrupt (disabled)
		];

//		tty2 = {
//			compatible = "terminal";
//
//			/**
//			 * terminal configuration
//			 * 	has to match the configuration data type of
//			 * 	the underlying device driver
//			 */
//			int<32> = [ 115200 ];	// baudrate
//			int<8> = [
//				1,					// stop bits (1)
//				0,					// parity (TPARITY_NONE)
//				3,					// csize (TCS_8)
//				1					// flags (none)
//			];
//		};

		eth0 = {
			compatible = "esp8266";

			/**
			 * uart configuration
			 * 	has to match the configuration data type of
			 * 	the avr uart driver
			 */
			int<32> = [ 2400 ];	// baudrate
			int<8> = [
				1,					// stop bits (1)
				0,					// parity (TPARITY_NONE)
				3,					// csize (TCS_8)
				0					// flags (none)
			];
		};
	};
};
