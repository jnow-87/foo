/**
 * Copyright (C) 2024 Jan Nowotsch
 * Author Jan Nowotsch	<jan.nowotsch@gmail.com>
 *
 * Released under the terms of the GNU GPL v2.0
 */



#include <config/config.h>
#include <assert.dts>


/* macros */
// gpio pin config (dt_data_t)
#define gpio_pin_dtd(pin, mode) \
	int<8> = [ \
		pin, \
		mode, \
	];

// gpio port config (gpio_port_cfg_t)
#define gpio_port_cfg_t(in_mask, out_mask, int_mask) \
	ASSERT((int_mask & ~(in_mask | out_mask)) == 0, "int_mask has to match in_mask and out_mask"); \
	\
	int<CONFIG_GPIO_INT_WIDTH> = [ \
		in_mask, \
		out_mask, \
		int_mask, \
	];

// gpio config (gpio_cfg_t)
#define gpio_cfg_t(in_mask, out_mask, int_mask, invert_mask, int_num) \
	ASSERT((invert_mask & ~(in_mask | out_mask)) == 0, "invert_mask has to match in_mask and out_mask"); \
	\
	gpio_port_cfg_t(in_mask, out_mask, int_mask) \
	\
	int<CONFIG_GPIO_INT_WIDTH> = [ \
		invert_mask, \
		int_num, \
	]

// gpio interrupt forward config (dt_data_t)
#define gpio_intfwd_dtd(pin, int_num) \
	int<8> = [ \
		pin, \
		int_num, \
	];
