/**
 * Copyright (C) 2020 Jan Nowotsch
 * Author Jan Nowotsch	<jan.nowotsch@gmail.com>
 *
 * Released under the terms of the GNU GPL v2.0
 */



#include <config/config.h>


arch = {
	addr-width = 64;
	reg-width = 64;

	ncores = 1;

	// interrupts
	num-ints = 4;

	timer-int = 0;
	syscall-int = 1;

	timer-cycle-time-us = 50000;
};

memory = {
	ram = {
		baseaddr = 0x00400000;
		size = 62914560;

		text = {
			baseaddr = 0x00400000;
			size = 20971520;
		};

		kernel-data = {
			baseaddr = 0x1800000;
			size = 20971520;
		};

		app-data = {
			baseaddr = 0x2c00000;
			size = 20971520;
		};
	};

	// The heap needs to be allocated dynamically to allow
	// using it as shared memory. However, a heap node is
	// needed since the kernel assumes its presence.
	heap = {
		baseaddr = 0x0;
		size = 1048576;
	};
};

devices = {
#include "x86/uart0.dts"

#ifdef CONFIG_LOOP_BLOCK
# include "common/loop0.dts"
#endif // CONFIG_LOOP_BLOCK

#ifdef CONFIG_LOOP_TERM
# include "common/tty-loop0.dts"
#endif // CONFIG_LOOP_TERM

#ifdef CONFIG_LOOP_VRAM
# include "common/vram-loop0.dts"
#endif // CONFIG_LOOP_VRAM

#ifdef CONFIG_DRIVER_X11
# include "x86/x11.dts"
#endif // CONFIG_DRIVER_X11

#ifdef CONFIG_DRIVER_GPIO
# include "x86/gpio.dts"

# ifdef CONFIG_INIT_TEST
#  include "x86/gpio-test.dts"
# endif // CONFIG_INIT_TEST
#endif // CONFIG_DRIVER_GPIO

#ifdef CONFIG_DRIVER_BRIDGE
# include "x86/bridge0-uart.dts"

# ifdef CONFIG_BRIDGE_UART_DEV
#  include "x86/bridge0-term.dts"
# endif // CONFIG_BRIDGE_UART_DEV

# ifdef CONFIG_BRIDGE_I2C_DEV
#  include "x86/bridge0-i2c.dts"
# endif // CONFIG_BRIDGE_I2C_DEV
#endif // CONFIG_DRIVER_BRIDGE
};
