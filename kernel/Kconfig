#
# Copyright (C) 2016 Jan Nowotsch
# Author Jan Nowotsch	<jan.nowotsch@gmail.com>
#
# Released under the terms of the GNU GPL v2.0
#



#
# kernel basics
#
# {{{
config KERNEL_SMP
	bool "build an smp system"
	default n

config KERNEL_LOG
	bool "kernel log"

config KERNEL_LOG_SIZE
	int "kernel log buffer size"
	depends on KERNEL_LOG
	default 10

config KERNEL_LOG_INIT
	bool "print kernel init messages"
	depends on KERNEL_LOG
	select KERNEL_LOG_INFO
	select KERNEL_LOG_WARN

config KERNEL_LOG_FATAL
	bool "print kernel FATAL messages"
	depends on KERNEL_LOG

config KERNEL_LOG_WARN
	bool "print kernel WARNING messages"
	depends on KERNEL_LOG

config KERNEL_LOG_INFO
	bool "print kernel INFO messages"
	depends on KERNEL_LOG

menu "hidden"
	visible if 0

	config KERNEL_NO_VIRT_MEM
		bool "kernel virtual memory support"
		default n

	config KERNEL_VIRT_MEM
		bool "kernel virtual memory support"
		default n	if KERNEL_NO_VIRT_MEM
		default y

	config KERNEL_SIGNAL
		bool "kernel signal support"
		select KERNEL_TIMER
		default n

	config KERNEL_INTTASK
		bool "kernel interrupt tasks"
		select KERNEL_SIGNAL
		default n

	config KERNEL_KTASK_QUEUE
		bool "ktask dependency queue"
		default n

	config KERNEL_LOG_DEBUG
		bool "print kernel DEBUG messages"
		select KERNEL_LOG
		default n

	config KERNEL_TIMER
		bool "timer"
		default n
endmenu
# }}}

#
# kernel memory layout
#
menu "memory configuration"
	source "kernel/memory/Kconfig"
endmenu

#
# system calls
#
# {{{
menu "system calls"
	config SC_DEBUG
		bool "global system call debug"
		depends on KERNEL_SYSCALL
		select KERNEL_LOG_DEBUG
		default n

	config SC_FILESYSTEM
		bool "file system"
		select KERNEL_SYSCALL
		select SC_DYNMEM
		select LIB_MUTEX
		default y
		help
			File system syscalls such as open, close, read, write.

	config SC_FILESYSTEM_DEBUG
		bool "file system debug messages"
		depends on SC_FILESYSTEM
		select KERNEL_LOG_DEBUG
		default n

	config SC_DYNMEM
		bool "dynamic memory"
		select KERNEL_SYSCALL
		select LIB_MUTEX
		default y
		help
			This includes malloc and free.

	config SC_DYNMEM_DEBUG
		bool "dynamic memory debug messages"
		depends on SC_DYNMEM
		select KERNEL_LOG_DEBUG
		select PRINTF_SIZET
		default n

	config SC_SCHED
		bool "scheduler, process and thread control"
		select KERNEL_SYSCALL
		select SC_SIGNAL
		default y
		help
			Syscalls for process and thread creation and control as well as scheduler calls.

	config SC_SCHED_DEBUG
		bool "scheduler, process and thread control debug messages"
		depends on SC_SCHED
		select KERNEL_LOG_DEBUG
		default n

	config SC_SIGNAL
		bool "user-space signal support"
		select KERNEL_SYSCALL
		select KERNEL_IPI if KERNEL_SMP
		default n
		help
			User space signaling mechanism.

	config SC_SIGNAL_DEBUG
		bool "signal debug messages"
		depends on SC_SIGNAL
		default n

	config SC_TIME
		bool "time"
		select KERNEL_SYSCALL
		select KERNEL_TIMER
		select KERNEL_SIGNAL
		default y
		help
			Timer syscalls, such as sleep and time.

	config SC_SOCKET
		bool "socket"
		select KERNEL_NET
		default n
		help
			Socket family of syscalls

	config SC_SOCKET_DEBUG
		bool "socket debug messages"
		depends on SC_SOCKET
		default n

	menu "hidden"
		visible if 0

		config KERNEL_SYSCALL
			bool "kernel syscall"

		config KERNEL_IPI
			bool "inter-processor interrupts"
	endmenu
endmenu
# }}}

#
# init binary
#
# {{{
menu "init binary settings"
	config INIT_BINARY
		hex "address of the init binary"

	choice
		prompt "init binary type"

		config INIT_BINTYPE_RAW
			bool "INIT_BINARY points to the init entry address"
			select BINLOADER_RAW

		config INIT_BINARY_ELF
			bool "INIT_BINARY points to an elf file"
			select BINLOADER_ELF
	endchoice

	config INIT_ARGS
		qstring "init argument string"
		default ""

	menu "binary loader support"
		config BINLOADER_RAW
			bool "raw binaries"

		config BINLOADER_ELF
			bool "elf binaries"
	endmenu

	menu "hidden"
		visible if 0

		config INIT_BINTYPE
			int "init binary type"
			default 0	if INIT_BINTYPE_RAW
			default 1	if INIT_BINARY_ELF
	endmenu
endmenu
# }}}

#
# scheduler
#
# {{{
menu "scheduler settigns"
	source "kernel/sched/Kconfig"
endmenu
# }}}

#
# file system
#
# {{{
menu "file system"
	source "kernel/fs/Kconfig"
endmenu
# }}}

#
# network
#
# {{{
menuconfig KERNEL_NET
	bool "networking infrastructure"
	select KERNEL_DEVFS
	select KERNEL_SIGNAL
	select SYS_RINGBUFFER

if KERNEL_NET
	source "kernel/net/Kconfig"
endif
# }}}

#
# test & debug
#
config KERNEL_TEST
	bool "execute 'kernel_test()' on boot"

config KERNEL_STAT
	bool "execute 'kernel_stat()' on boot"
	select KERNEL_LOG
# }}}
